<Window
	x:Name="Control"
	x:Class="Laevo.View.ActivityOverview.ActivityOverviewWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:activityOverview="clr-namespace:Laevo.View.ActivityOverview"	
	xmlns:binding="clr-namespace:Laevo.ViewModel.ActivityOverview.Binding"
	xmlns:taskList="clr-namespace:Laevo.View.TaskList"
	xmlns:behaviors="clr-namespace:Whathecode.System.Xaml.Behaviors;assembly=Whathecode.PresentationFramework"
	xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:converters="clr-namespace:Laevo.View.ActivityOverview.Converters"
	xmlns:shaders="clr-namespace:Laevo.View.ActivityOverview.Shaders"
	xmlns:vm="clr-namespace:Laevo.ViewModel.ActivityOverview"
	xmlns:wtcConverters="clr-namespace:Whathecode.System.Windows.Data;assembly=Whathecode.PresentationFramework"
	xmlns:wtc="clr-namespace:Whathecode.System.Windows.Input.CommandFactory;assembly=Whathecode.PresentationFramework"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=vm:ActivityOverviewViewModel}"
	Title="Laevo Activity Time Line"
	WindowStyle="None"
	WindowState="Maximized"
	ShowInTaskbar="False"
	FontFamily="Segoe UI Light"
	FontSize="20"
	Foreground="White">

	<Window.Topmost>
		<Binding Path="ActivityMode">
			<Binding.Converter>
				<converters:ActivityModeToTopMostConverter />
			</Binding.Converter>
		</Binding>
	</Window.Topmost>
	
	<Window.Resources>
		<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1" options:Freeze="True">
			<GradientStop Color="#606c88" Offset="0" />
			<GradientStop Color="#282944" Offset="1" />
		</LinearGradientBrush>
		<SolidColorBrush x:Key="TimeLineBrush" Color="Transparent" options:Freeze="True" />
		
		<converters:AspectRatioToGeometryConverter x:Key="AspectRatioToPositions" />
		<converters:AspectRatioToFovConverter x:Key="AspectRatioToFov" />
		<converters:AspectRatioToTransformOffset x:Key="AspectRatioToTransformOffset" />
		<converters:TimeLineWidthConverter x:Key="TimeLineWidthConverter" />
		<converters:TimeLineHeightConverter x:Key="TimeLineHeightConverter" />
	</Window.Resources>
	
	<Grid
		x:Name="Container2D"
		Background="{StaticResource BackgroundBrush}"
		behaviors:MouseBehavior.LeftClickDragCommand="{Binding ElementName=Control, Path=MoveTimeLineCommand}"
		behaviors:MouseBehavior.DragCapturesMouse="True"
		MouseWheel="OnMouseWheel">

		<Grid.CacheMode>
			<BitmapCache />
		</Grid.CacheMode>

		<!-- Blur effect for popups. -->
		<Grid.Effect>
			<BlurEffect Radius="0" />
		</Grid.Effect>
		<Grid.Style>
			<Style>
				<Style.Triggers>
					<DataTrigger Binding="{Binding ActivityMode}">
						<DataTrigger.Value>
							<binding:Mode>Edit</binding:Mode>
						</DataTrigger.Value>
						<DataTrigger.Setters>
							<Setter Property="UIElement.IsHitTestVisible" Value="False" />
						</DataTrigger.Setters>
						<DataTrigger.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="(Grid.Effect).(BlurEffect.Radius)"
										To="5" Duration="0:0:1" />
								</Storyboard>
							</BeginStoryboard>
						</DataTrigger.EnterActions>
						<DataTrigger.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="(Grid.Effect).(BlurEffect.Radius)"
										To="0" Duration="0:0:0.3" />
								</Storyboard>
							</BeginStoryboard>
						</DataTrigger.ExitActions>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Grid.Style>

		<!-- Time Line 3D -->
		<Viewport3D
			AllowDrop="True"
			DragEnter="OnTimeLineDragEnter"
			DragLeave="OnTimeLineDragLeave"
			DragOver="OnTimeLineDragOver"
			Drop="OnTimeLineDragDropped"
			ContextMenuOpening="OnContextMenuOpening"
			ClipToBounds="False"
			RenderOptions.EdgeMode="Aliased">
			
			<Viewport3D.ContextMenu>
				<ContextMenu>
					<MenuItem
						Header="_New Activity"
						Command="{wtc:CommandBinding {x:Static binding:Commands.NewActivity}}">
						<MenuItem.Icon>
							<Image Source="Images\NewActivity.png" Width="20" Height="20" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem
						Header="_Plan Activity Here"
						Command="{wtc:CommandBinding {x:Static binding:Commands.PlanActivity}}">
						<MenuItem.Icon>
							<Image Source="Images\PlanActivity.png" Width="20" Height="20" />
						</MenuItem.Icon>
					</MenuItem>
				</ContextMenu>
			</Viewport3D.ContextMenu>
			
			<Viewport3D.CacheMode>
				<BitmapCache />
			</Viewport3D.CacheMode>

			<Viewport3D.Camera>
				<PerspectiveCamera
					Position="0 0 1"
					LookDirection="0 0 -1"
					UpDirection="0 1 0">
					<PerspectiveCamera.FieldOfView>
						<MultiBinding Converter="{StaticResource AspectRatioToFov}">
							<Binding ElementName="Container2D" Path="ActualWidth" />
							<Binding ElementName="Container2D" Path="ActualHeight" />
						</MultiBinding>
					</PerspectiveCamera.FieldOfView>
				</PerspectiveCamera>
			</Viewport3D.Camera>

			<ContainerUIElement3D>
				<ModelUIElement3D>
					<Model3DGroup>
						<AmbientLight Color="White" />
					</Model3DGroup>
				</ModelUIElement3D>
			</ContainerUIElement3D>

			<Viewport2DVisual3D>
				<Viewport2DVisual3D.CacheMode>
					<BitmapCache />
				</Viewport2DVisual3D.CacheMode>

				<Viewport2DVisual3D.Transform>
					<Transform3DGroup>
						<RotateTransform3D>
							<RotateTransform3D.CenterX>
								<MultiBinding Converter="{StaticResource AspectRatioToTransformOffset}">
									<Binding ElementName="Container2D" Path="ActualWidth" />
									<Binding ElementName="Container2D" Path="ActualHeight" />
								</MultiBinding>
							</RotateTransform3D.CenterX>
							<RotateTransform3D.Rotation>
								<AxisAngleRotation3D
									x:Name="RotationTransform"
									Angle="10" />
							</RotateTransform3D.Rotation>
						</RotateTransform3D>
					</Transform3DGroup>
				</Viewport2DVisual3D.Transform>

				<Viewport2DVisual3D.Geometry>
					<MeshGeometry3D
						TriangleIndices="0,1,2 2,3,0"
						TextureCoordinates="0 0, 0 1, 1 1, 1 0">
						<MeshGeometry3D.Positions>
							<MultiBinding Converter="{StaticResource AspectRatioToPositions}">
								<Binding ElementName="Container2D" Path="ActualWidth" />
								<Binding ElementName="Container2D" Path="ActualHeight" />
								<Binding ElementName="RotationTransform" Path="Angle" />
							</MultiBinding>
						</MeshGeometry3D.Positions>
					</MeshGeometry3D>
				</Viewport2DVisual3D.Geometry>
				
				<Viewport2DVisual3D.Material>
					<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
				</Viewport2DVisual3D.Material>

				<Grid>
					<Grid.Effect>
						<shaders:FadeEffect />
					</Grid.Effect>

					<Grid.CacheMode>
						<BitmapCache />
					</Grid.CacheMode>

					<Grid
						x:Name="TimeLineContainer"
						ClipToBounds="True"
						Background="{StaticResource TimeLineBrush}">

						<Grid.Width>
							<MultiBinding Converter="{StaticResource TimeLineWidthConverter}">
								<Binding ElementName="Container2D" Path="ActualWidth" />
								<Binding ElementName="Container2D" Path="ActualHeight" />
								<Binding ElementName="RotationTransform" Path="Angle" />
								<Binding Path="TimeLineRenderScale" />
							</MultiBinding>
						</Grid.Width>

						<Grid.Height>
							<MultiBinding Converter="{StaticResource TimeLineHeightConverter}">
								<Binding ElementName="Container2D" Path="ActualHeight" />
								<Binding Path="TimeLineRenderScale" />
							</MultiBinding>
						</Grid.Height>
						
						<activityOverview:TimeLineControl
							x:Name="TimeLine"
							Focusable="True" />

						<!-- Drag and drop icons. -->
						<!-- Setting IsHitTestVisible to false prevents the icon getting in the way of the dragging operation. -->
						<Canvas
							IsHitTestVisible="False" 
							Visibility="{Binding
							ElementName=Control,
							Path=IsTimeLineDraggedOver,
							Converter={wtcConverters:FromBooleanConverter IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}">

							<Canvas x:Name="DragDropCursorPosition">
								<StackPanel
									Orientation ="Horizontal">
									<StackPanel.Resources>
										<BitmapImage x:Key="OpenTaskCursor" UriSource="Images\OpenTask.png" />
										<BitmapImage x:Key="PlanActivityCursor" UriSource="Images\PlanActivity.png" />
									</StackPanel.Resources>
									<Image
										x:Name="DragDropCursor"
										Source="{Binding
											Path=IsFocusedTimeBeforeNow,
											Converter={wtcConverters:FromBooleanConverter IfTrue={StaticResource OpenTaskCursor}, IfFalse={StaticResource PlanActivityCursor}}}" />

									<TextBlock
										Text="{Binding FocusedRoundedTime, StringFormat='dddd, MMMM d, HH:mm'}"
										Margin="10, 0, 0, 0"
										Visibility="{Binding
											Path=IsFocusedTimeBeforeNow,
											Converter={wtcConverters:FromBooleanConverter IfTrue={x:Static Visibility.Collapsed}, IfFalse={x:Static Visibility.Visible}}}" />
								</StackPanel>
							</Canvas>

						</Canvas>
					</Grid>
				</Grid>

			</Viewport2DVisual3D>
		</Viewport3D>

		<!-- No 3D. -->
		<!--
		<Grid>
			<Grid.Effect>
				<Shaders:FadeEffect />
			</Grid.Effect>

			<Grid.CacheMode>
				<BitmapCache />
			</Grid.CacheMode>

			<Grid
				ClipToBounds="True"
				Background="{StaticResource TimeLineBrush}">

				<Grid.Width>
					<MultiBinding Converter="{StaticResource TimeLineWidthConverter}">
						<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
						<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
						<Binding ElementName="RotationTransform" Path="Angle" />
						<Binding Path="TimeLineRenderScale" />
					</MultiBinding>
				</Grid.Width>

				<Grid.Height>
					<MultiBinding Converter="{StaticResource TimeLineHeightConverter}">
						<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
						<Binding Path="TimeLineRenderScale" />
					</MultiBinding>
				</Grid.Height>

				<ActivityOverview:TimeLineControl
					x:Name="TimeLine"
					Focusable="True" />
			</Grid>
		</Grid>
		-->
		
		<StackPanel
			Orientation="Horizontal"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Margin="0, 0, 10, 10">

			<taskList:TaskListControl
				VerticalAlignment="Bottom"
				Margin="0, 0, 20, 2"
				Height="35" />

			<Border
				Width="55"
				Height="55"
				Margin="0, 0, 20, 0"
				VerticalAlignment="Bottom"
				CornerRadius="5"
				BorderThickness="0, 0, 0, 2"
				BorderBrush="{Binding HomeActivity.IsActive, Converter={wtcConverters:FromBooleanConverter IfTrue=Yellow, IfFalse=Transparent}}">

				<Button
					Cursor="Hand"
					Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
					Command="{wtc:CommandBinding {x:Static binding:Commands.OpenHome}}">
					<Image Source="Images\Home.png" />
				</Button>

			</Border>

			<activityOverview:ClockControl
				x:Name="Clock"
				VerticalAlignment="Bottom"
				Time="{Binding CurrentTime}" />
		</StackPanel>

		<!-- Background drop for popups. -->
		<Grid
			x:Name="Shadow"
			Background="Black"
			Opacity="0"
			IsHitTestVisible="False"
			ZIndex="100">
			<Grid.Style>
				<Style>
					<Style.Triggers>
						<DataTrigger Binding="{Binding ActivityMode}">
							<DataTrigger.Value>
								<binding:Mode>Edit</binding:Mode>
							</DataTrigger.Value>
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetProperty="Opacity"
											To="0.6" Duration="0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetProperty="Opacity"
											To="0" Duration="0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>
		
	</Grid>

</Window>