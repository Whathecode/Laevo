<Window
	x:Class="Laevo.View.ActivityOverview.ActivityOverviewWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ActivityOverview="clr-namespace:Laevo.View.ActivityOverview"
	xmlns:Binding="clr-namespace:Laevo.ViewModel.ActivityOverview.Binding"
	xmlns:Behaviors="clr-namespace:Whathecode.System.Xaml.Behaviors;assembly=Whathecode.PresentationFramework"
	xmlns:Converters="clr-namespace:Laevo.View.ActivityOverview.Converters"
	xmlns:Shaders="clr-namespace:Laevo.View.ActivityOverview.Shaders"
	Title="Laevo Activity Time Line"
	WindowStyle="None"
	WindowState="Maximized"
	ShowInTaskbar="False"
	FontFamily="Segoe UI Light">
	
	<Window.Topmost>
		<Binding Path="ActivityMode">
			<Binding.Converter>
				<Converters:ActivityModeToTopMostConverter />
			</Binding.Converter>
		</Binding>
	</Window.Topmost>
	
	<Window.CommandBindings>
		<CommandBinding
			Command="ActivityOverview:ActivityOverviewWindow.MouseDragged"
			Executed="MoveTimeLine" />	
	</Window.CommandBindings>
	
	<Window.Resources>
		<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="#606c88" Offset="0" />
			<GradientStop Color="#282944" Offset="1" />
		</LinearGradientBrush>
		<SolidColorBrush x:Key="TimeLineBrush" Color="Transparent" />
		
		<Converters:AspectRatioToGeometryConverter x:Key="AspectRatioToPositions" />
		<Converters:AspectRatioToFovConverter x:Key="AspectRatioToFov" />
		<Converters:AspectRatioToTransformOffset x:Key="AspectRatioToTransformOffset" />
		<Converters:TimeLineWidthConverter x:Key="TimeLineWidthConverter" />
		<Converters:TimeLineHeightConverter x:Key="TimeLineHeightConverter" />
	</Window.Resources>
		
	<Grid
		x:Name="TimeLineContainer"
		Background="{StaticResource BackgroundBrush}"
		Behaviors:MouseBehavior.LeftClickDragCommand="ActivityOverview:ActivityOverviewWindow.MouseDragged"
		Behaviors:MouseBehavior.DragCapturesMouse="True"
		MouseWheel="OnMouseWheel">

		<!-- Blur effect for popups. -->
		<Grid.Effect>
			<BlurEffect Radius="0" />
		</Grid.Effect>		
		<Grid.Style>
			<Style>
				<Style.Triggers>
					<DataTrigger Binding="{Binding ActivityMode}">
						<DataTrigger.Value>
							<Binding:Mode>Edit</Binding:Mode>
						</DataTrigger.Value>		
						<DataTrigger.Setters>
							<Setter Property="UIElement.IsHitTestVisible" Value="False" />
						</DataTrigger.Setters>
						<DataTrigger.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="(Grid.Effect).(BlurEffect.Radius)"
										To="5" Duration="0:0:1" />
								</Storyboard>
							</BeginStoryboard>
						</DataTrigger.EnterActions>
						<DataTrigger.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="(Grid.Effect).(BlurEffect.Radius)"
										To="0" Duration="0:0:0.3" />
								</Storyboard>
							</BeginStoryboard>							
						</DataTrigger.ExitActions>
					</DataTrigger>				
				</Style.Triggers>
			</Style>
		</Grid.Style>

		<!-- Time Line 3D -->
		<Viewport3D
			ClipToBounds="False"
			RenderOptions.EdgeMode="Aliased">

			<Viewport3D.Camera>
				<PerspectiveCamera
					Position="0 0 1"
					LookDirection="0 0 -1"
					UpDirection="0 1 0">
					<PerspectiveCamera.FieldOfView>
						<MultiBinding Converter="{StaticResource AspectRatioToFov}">
							<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
							<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
						</MultiBinding>
					</PerspectiveCamera.FieldOfView>
				</PerspectiveCamera>
			</Viewport3D.Camera>

			<ContainerUIElement3D>
				<ModelUIElement3D>
					<Model3DGroup>
						<AmbientLight Color="White" />
					</Model3DGroup>
				</ModelUIElement3D>
			</ContainerUIElement3D>

			<Viewport2DVisual3D>									
				<Viewport2DVisual3D.CacheMode>
					<BitmapCache RenderAtScale="1.0" />
				</Viewport2DVisual3D.CacheMode>

				<Viewport2DVisual3D.Transform>
					<Transform3DGroup>
						<RotateTransform3D>
							<RotateTransform3D.CenterX>
								<MultiBinding Converter="{StaticResource AspectRatioToTransformOffset}">
									<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
									<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
								</MultiBinding>
							</RotateTransform3D.CenterX>
							<RotateTransform3D.Rotation>
								<AxisAngleRotation3D
									x:Name="RotationTransform"
									Angle="10" />
							</RotateTransform3D.Rotation>
						</RotateTransform3D>
					</Transform3DGroup>
				</Viewport2DVisual3D.Transform>

				<Viewport2DVisual3D.Geometry>
					<MeshGeometry3D
						TriangleIndices="0,1,2 2,3,0"
						TextureCoordinates="0 0, 0 1, 1 1, 1 0">
						<MeshGeometry3D.Positions>
							<MultiBinding Converter="{StaticResource AspectRatioToPositions}">
								<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
								<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
								<Binding ElementName="RotationTransform" Path="Angle" />
							</MultiBinding>
						</MeshGeometry3D.Positions>
					</MeshGeometry3D>
				</Viewport2DVisual3D.Geometry>
				
				<Viewport2DVisual3D.Material>
					<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
				</Viewport2DVisual3D.Material>

				<Grid>
					<Grid.Effect>
						<Shaders:FadeEffect />
					</Grid.Effect>

					<Grid
						ClipToBounds="True"
						Background="{StaticResource TimeLineBrush}">

						<Grid.Width>
							<MultiBinding Converter="{StaticResource TimeLineWidthConverter}">
								<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
								<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
								<Binding ElementName="RotationTransform" Path="Angle" />
								<Binding Path="TimeLineRenderScale" />
							</MultiBinding>
						</Grid.Width>

						<Grid.Height>
							<MultiBinding Converter="{StaticResource TimeLineHeightConverter}">
								<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
								<Binding Path="TimeLineRenderScale" />
							</MultiBinding>
						</Grid.Height>

						<ActivityOverview:TimeLineControl
							x:Name="TimeLine"
							Focusable="True" />
					</Grid>
				</Grid>

			</Viewport2DVisual3D>
		</Viewport3D>

		<!-- No 3D. -->
		<!--<Grid
			ClipToBounds="True"
			Background="{StaticResource TimeLineBrush}"
			Behaviors:MouseBehavior.LeftClickDragCommand="ActivityOverview:ActivityOverviewWindow.MouseDragged"
			Behaviors:MouseBehavior.DragCapturesMouse="False"
			MouseWheel="OnMouseWheel">

			<Grid.Resources>
				<System:Double x:Key="Angle">0</System:Double>
			</Grid.Resources>
			
			<Grid.Width>
				<MultiBinding Converter="{StaticResource TimeLineWidthConverter}">
					<Binding ElementName="TimeLineContainer" Path="ActualWidth" />
					<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
					<Binding Source="{StaticResource Angle}" />
					<Binding Path="TimeLineRenderScale" />
				</MultiBinding>
			</Grid.Width>

			<Grid.Height>
				<MultiBinding Converter="{StaticResource TimeLineHeightConverter}">
					<Binding ElementName="TimeLineContainer" Path="ActualHeight" />
					<Binding Path="TimeLineRenderScale" />
				</MultiBinding>
			</Grid.Height>

			<ActivityOverview:TimeLineControl
					x:Name="TimeLine"
					Focusable="True" />
		</Grid>-->

		<!-- Clock -->
		<ActivityOverview:ClockControl
			Time="{Binding CurrentTime}"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom" />

		<!-- Background drop for popups. -->
		<Grid
			x:Name="Shadow"
			Background="Black"
			Opacity="0"
			IsHitTestVisible="False"
			ZIndex="100">
			<Grid.Style>
				<Style>
					<Style.Triggers>
						<DataTrigger Binding="{Binding ActivityMode}">
							<DataTrigger.Value>
								<Binding:Mode>Edit</Binding:Mode>
							</DataTrigger.Value>
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetProperty="Opacity"
											To="0.6" Duration="0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetProperty="Opacity"
											To="0" Duration="0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>								
							</DataTrigger.ExitActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>
		
	</Grid>

</Window>