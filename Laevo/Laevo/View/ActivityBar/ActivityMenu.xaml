<Window
	x:Class="Laevo.View.ActivityBar.ActivityMenu"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:activityBar="clr-namespace:Laevo.View.ActivityBar"
	xmlns:commandFactory="clr-namespace:Whathecode.System.Windows.Input.CommandFactory;assembly=Whathecode.PresentationFramework"
	xmlns:binding="clr-namespace:Laevo.ViewModel.Activity.Binding"
	xmlns:data="clr-namespace:Whathecode.System.Windows.Data;assembly=Whathecode.PresentationFramework"
	xmlns:converters="clr-namespace:Whathecode.System.Windows.Data;assembly=Whathecode.PresentationFramework"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	xmlns:vm="clr-namespace:Laevo.ViewModel.Activity"
	d:DataContext="{d:DesignInstance Type=vm:ActivityViewModel}"
	Title="ActivityMenu"
	WindowStyle="None"
	Topmost="True"
	ShowInTaskbar="False"
	Foreground="White"
	Background="Transparent"
	FontFamily="Segoe UI Light"
	FontSize="15"
	SizeToContent="WidthAndHeight"
	MinHeight="100"
	activityBar:GlassEffect.IsEnabled="True"
	activityBar:DisableResize.IsDisabled="True">

	<Window.Resources>
		<Style TargetType="{x:Type Image}">
			<Setter Property="Width" Value="25" />
			<Setter Property="Height" Value="25" />
		</Style>

		<ControlTemplate x:Key="StatesButtonTemplate" TargetType="{x:Type Button}">
			<ControlTemplate.Resources>

				<Storyboard x:Key="Timeline1">
					<DoubleAnimationUsingKeyFrames
						BeginTime="00:00:00"
						Storyboard.TargetName="glow"
						Storyboard.TargetProperty="(UIElement.Opacity)">
						<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
					</DoubleAnimationUsingKeyFrames>
				</Storyboard>

				<Storyboard x:Key="Timeline2">
					<DoubleAnimationUsingKeyFrames
						BeginTime="00:00:00"
						Storyboard.TargetName="glow"
						Storyboard.TargetProperty="(UIElement.Opacity)">
						<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
					</DoubleAnimationUsingKeyFrames>
				</Storyboard>

			</ControlTemplate.Resources>

			<Border
				x:Name="border"
				Background="Transparent"
				BorderBrush="Black"
				BorderThickness="0.5"
				CornerRadius="1">
				<Grid>

					<Border
						Opacity="0"
						HorizontalAlignment="Stretch"
						x:Name="glow"
						Width="Auto"
						CornerRadius="1">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.0">
								<GradientStop Color="White" Offset="-0.2" />
								<GradientStop Color="Transparent" Offset="0.5" />
								<GradientStop Color="White" Offset="1.5" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>

					<ContentPresenter
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Width="Auto" />

					<Border
						HorizontalAlignment="Stretch"
						Margin="0,0,0,0"
						x:Name="shine"
						Width="Auto"
						CornerRadius="1,1,0,0">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="White" Offset="-0.5" />
								<GradientStop Color="Transparent" Offset="0.5" />
								<GradientStop Color="White" Offset="2" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>

				</Grid>
			</Border>
			<ControlTemplate.Triggers>

				<Trigger Property="IsPressed" Value="True">
					<Setter
						Property="Opacity"
						TargetName="shine"
						Value="0.4" />
					<Setter
						Property="Background"
						TargetName="border"
						Value="Transparent" />
					<Setter
						Property="Visibility"
						TargetName="glow"
						Value="Hidden" />
				</Trigger>

				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource Timeline1}" />
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}" />
					</Trigger.ExitActions>
				</Trigger>

			</ControlTemplate.Triggers>
		</ControlTemplate>

	</Window.Resources>

	<StackPanel Orientation="Horizontal">

		<Border
			Background="White"
			CornerRadius="5, 5, 5, 5"
			BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
			BorderThickness="1"
			HorizontalAlignment="Left">

			<StackPanel
				ClipToBounds="True"
				Orientation="Vertical"
				Margin="5,4,5,4">

				<StackPanel.Resources>
					<Style TargetType="{x:Type MenuItem}">
						<Setter Property="Foreground" Value="Black" />
					</Style>
				</StackPanel.Resources>

				<MenuItem
					Header="Activity Settings"
					Command="{commandFactory:CommandBinding {x:Static binding:Commands.EditActivity}}"
					Visibility="{Binding IsEditable, Converter={data:FromBooleanConverter IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}">
					<MenuItem.Icon>
						<Image Source="../Activity/ActionIcons/edit.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Header="Open Activity Library"
					Command="{commandFactory:CommandBinding {x:Static binding:Commands.OpenActivityLibrary}}">
					<MenuItem.Icon>
						<Image Source="../Activity/Icons/Library.png" />
					</MenuItem.Icon>
				</MenuItem>

			</StackPanel>
		</Border>

		<StackPanel
			ClipToBounds="True"
			Orientation="Vertical"
			Margin="15,10,10,15">

			<StackPanel Orientation="Horizontal">

				<!--TODO: Why condition converter is not working in case of commmand binding?-->
				<Button
					HorizontalAlignment="Left"
					Margin="0,0,1,0"
					VerticalAlignment="Top"
					Width="100" Height="26"
					Content="{Binding IsOpen, 
						Converter={converters:SingleConditionConverter Type={x:Type system:String}, 
						Expression='[0]', 
						IfTrue=Stop, IfFalse=Open}}"
					Command="{Binding IsOpen, 
						Converter={converters:SingleConditionConverter Expression='[0]', 
						IfTrue={commandFactory:CommandBinding {x:Static binding:Commands.StopActivity}}, 
						IfFalse={commandFactory:CommandBinding {x:Static binding:Commands.OpenActivity}}}}"
					Foreground="#FFFFFFFF"
					Template="{DynamicResource StatesButtonTemplate}" />

				<Button
					Name="OtherStatesButton"
					HorizontalAlignment="Left"
					VerticalAlignment="Bottom"
					Width="20" Height="26"
					Foreground="#FFFFFFFF"
					Template="{DynamicResource StatesButtonTemplate}"
					ContextMenuService.Placement="Right"
					Click="ShowOtherStatesMenu"
					MouseRightButtonDown="HidetherStatesMenu">

					<Button.Content>
						<Polygon
							Points="0,2 5,5, 0,8"
							Stroke="White"
							Fill="White" />
					</Button.Content>

					<Button.ContextMenu>
						<ContextMenu>
							<MenuItem
								Header="{Binding IsSuspended, 
									Converter={converters:SingleConditionConverter Type={x:Type system:String}, 
									Expression='[0]', 
									IfTrue=Resume, IfFalse=Suspend}}" />
						</ContextMenu>
					</Button.ContextMenu>
				</Button>

			</StackPanel>

			<!--Quick launch items-->

			<!--<MenuItem Header="test">
				<MenuItem.Icon>
					<Image Source="Burn.png" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="test">
				<MenuItem.Icon>
					<Image Source="Burn.png" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Header="test">
				<MenuItem.Icon>
					<Image Source="Burn.png" />
				</MenuItem.Icon>
			</MenuItem>-->

		</StackPanel>
	</StackPanel>
</Window>