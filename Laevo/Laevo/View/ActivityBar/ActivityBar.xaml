<Window
	x:Name="Control"
	x:Class="Laevo.View.ActivityBar.ActivityBar"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:wtc="clr-namespace:Whathecode.System.Windows.Input.CommandFactory;assembly=Whathecode.PresentationFramework"
	xmlns:behaviors="clr-namespace:Whathecode.System.Xaml.Behaviors;assembly=Whathecode.PresentationFramework"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:activityConverters="clr-namespace:Laevo.View.Activity.Converters"
	xmlns:converters="clr-namespace:Whathecode.System.Windows.Data;assembly=Whathecode.PresentationFramework"
	xmlns:binding="clr-namespace:Laevo.ViewModel.Activity.Binding"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:activityBar="clr-namespace:Laevo.View.ActivityBar"
	xmlns:activityBarViewModel="clr-namespace:Laevo.ViewModel.ActivityBar"
	d:DataContext="{d:DesignInstance Type=activityBarViewModel:ActivityBarViewModel}"
	Title="ActivityInfoBox"
	WindowStyle="None"
	Topmost="True"
	ShowInTaskbar="False"
	ShowActivated="False"
	Foreground="White"
	Background="Transparent"
	FontFamily="Segoe UI Light"
	FontSize="18"
	Height="55"
	activityBar:GlassEffect.IsEnabled="True">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="GlassButton.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<activityConverters:ActivityBorderConverter x:Key="ActivityBorderConverter" />
			<Style TargetType="{x:Type ContextMenu}">
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ContextMenu}">
							<Border Background="{TemplateBinding Background}" CornerRadius="7, 7, 8, 8"
							        BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="1">
								<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>

	</Window.Resources>

	<DockPanel Margin="10, 0, 10, 0">

		<StackPanel
			DataContext="{Binding CurrentActivity}"
			Orientation="Horizontal"
			DockPanel.Dock="Left">


			<Button
				Style="{StaticResource GlassButton}"
				Width="35"
				Height="35"
				Click="ShowActivityMenu"
				Name="ActivityButton"
				MouseRightButtonDown="HideActivityMenu">

				<Button.Background>
					<SolidColorBrush Color="{Binding Color}" />
				</Button.Background>

				<Button.ContextMenu>
					<ContextMenu Background="{DynamicResource AeroThemeColor}" Name="ContextMenu">
						<MenuItem
							Header="Activity Settings"
							Command="{wtc:CommandBinding {x:Static binding:Commands.EditActivity}}"
							Visibility="{Binding IsEditable, Converter={converters:FromBooleanConverter IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
						<MenuItem
							Header="Open conetext"
							Command="{wtc:CommandBinding {x:Static binding:Commands.OpenActivityLibrary}}" />
						<MenuItem
							Header="Stop"
							Command="{wtc:CommandBinding {x:Static binding:Commands.StopActivity}}" />
					</ContextMenu>
				</Button.ContextMenu>

				<Image Source="{Binding Icon}" Width="23" Height="23" />
			</Button>

			<TextBox
				x:Name="ActivityName"
				Background="Transparent"
				BorderBrush="Transparent"
				Foreground="White"
				CaretBrush="White"
				IsEnabled="{Binding IsEditable}"
				Text="{Binding Label}"
				Margin="10, 0, 10, 0"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				PreviewKeyDown="LabelKeyDown">

				<TextBox.Template>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ScrollViewer x:Name="PART_ContentHost" />
					</ControlTemplate>
				</TextBox.Template>
			</TextBox>

		</StackPanel>

		<!-- Container which shows the open activites between which can be switched. -->
		<StackPanel
			Orientation="Horizontal"
			DockPanel.Dock="Right"
			HorizontalAlignment="Right">

			<StackPanel
				Orientation="Horizontal">

				<TextBlock
					Text="{Binding SelectedActivity.Label}"
					Margin="0, 0, 20, 0"
					VerticalAlignment="Center" />

				<ItemsControl
					x:Name="ItemsControlActivities"
					ItemsSource="{Binding OpenPlusCurrentActivities}">

					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel
								Orientation="Horizontal"
								Visibility="{Binding
									OpenPlusCurrentActivities.Count,
									Converter={converters:SingleConditionConverter Expression='[0] > 1', IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Hidden}}}" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Button
								x:Name="ActivityButton"
								BorderThickness="2"
								Margin="0, 0, 3, 0"
								Padding="3"
								Command="{wtc:CommandBinding {x:Static binding:Commands.SelectActivity}}">

								<Button.Background>
									<SolidColorBrush Color="{Binding Path=Color}" />
								</Button.Background>

								<Button.BorderBrush>
									<MultiBinding Converter="{StaticResource ActivityBorderConverter}">
										<Binding Path="IsActive" />
										<Binding Path="IsOpen" />
										<Binding Path="HasOpenWindows" />
										<Binding Path="HasUnattendedInterruptions" />
									</MultiBinding>
								</Button.BorderBrush>

								<Image
									Cursor="Hand"
									Source="{Binding Path=Icon}" />
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

			</StackPanel>

			<Image
				Cursor="Hand"
				Source="{Binding HomeActivity.Icon}"
				behaviors:MouseBehavior.LeftClickCommand="{wtc:CommandBinding {x:Static binding:Commands.SelectActivity}, Path=HomeActivity}"
				Width="30" Height="30"
				Margin="25, 0, 0, 0" />

		</StackPanel>

	</DockPanel>


</Window>