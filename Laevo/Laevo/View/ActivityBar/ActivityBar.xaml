<Window
	x:Name="Control"
	x:Class="Laevo.View.ActivityBar.ActivityBar"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:wtc="clr-namespace:Whathecode.System.Windows.Input.CommandFactory;assembly=Whathecode.PresentationFramework"
	xmlns:behaviors="clr-namespace:Whathecode.System.Xaml.Behaviors;assembly=Whathecode.PresentationFramework"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:activityConverters="clr-namespace:Laevo.View.Activity.Converters"
	xmlns:b1="clr-namespace:Laevo.ViewModel.Activity.Binding"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:activityBar="clr-namespace:Laevo.View.ActivityBar"
	xmlns:activityBarViewModel="clr-namespace:Laevo.ViewModel.ActivityBar"
	d:DataContext="{d:DesignInstance Type=activityBarViewModel:ActivityBarViewModel}"
	Title="ActivityInfoBox"
	WindowStyle="None"
	Topmost="True"
	ShowInTaskbar="False"
	ShowActivated="False"
	Background="Transparent"
	Height="55"
	activityBar:GlassEffect.IsEnabled="True">

	<!-- TODO: Manage windows theme colors, for later. 
	Applies a color with gradient to window to simulate Windows taskbar look when Aero theme is switched off. 
	<Window.Background>
		<LinearGradientBrush EndPoint="0.5, 1" StartPoint="0.5, 0">
			<GradientStop Color="#FF324E5A" Offset="0" />
			<GradientStop Color="#FF223E4A" Offset="1" />
		</LinearGradientBrush>
	</Window.Background>-->

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="GlassButton.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<activityConverters:ActivityBorderConverter x:Key="ActivityBorderConverter" />
		</ResourceDictionary>
	</Window.Resources>

	<DockPanel Margin="10, 0, 10, 0">

		<StackPanel
			DataContext="{Binding CurrentActivity}"
			Orientation="Horizontal"
			DockPanel.Dock="Left">

			<Button
				Style="{StaticResource GlassButton}"
				Width="35"
				Height="35">

				<Button.Background>
					<SolidColorBrush Color="{Binding Color}" />
				</Button.Background>

				<Image Source="{Binding Icon}" Width="23" Height="23" />
			</Button>

			<TextBox
				x:Name="ActivityName"
				Background="Transparent"
				BorderBrush="Transparent"
				Foreground="White"
				CaretBrush="White"
				FontFamily="Segoe UI Light"
				FontSize="18"
				Text="{Binding Label}"
				Margin="10, 0, 10, 0"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				PreviewKeyDown="LabelKeyDown">

				<TextBox.Template>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ScrollViewer x:Name="PART_ContentHost" />
					</ControlTemplate>
				</TextBox.Template>
			</TextBox>

			<Image
				x:Name="SettingsImage"
				Focusable="True"
				Source="../Activity/ActionIcons/edit.png"
				Cursor="Hand"
				Width="28"
				Height="28"
				behaviors:MouseBehavior.LeftClickCommand="{wtc:CommandBinding {x:Static b1:Commands.EditActivity }}" />

		</StackPanel>

		<!-- Container which shows the open activites between which can be switched. -->
		<StackPanel
			Orientation="Horizontal"
			DockPanel.Dock="Right"
			HorizontalAlignment="Right">

			<Border
				x:Name="Container"
				CornerRadius="5"
				BorderThickness="2"
				Margin="0, 0, 15, 0"
				Padding="3">
				
				<Border.Background>
					<SolidColorBrush Color="{Binding HomeActivity.Color}" />
				</Border.Background>

				<Border.BorderBrush>
					<MultiBinding Converter="{StaticResource ActivityBorderConverter}">
						<Binding Path="HomeActivity.IsActive" />
						<Binding Path="HomeActivity.IsOpen" />
						<Binding Path="HomeActivity.HasOpenWindows" />
						<Binding Path="HomeActivity.HasUnattendedInterruptions" />
					</MultiBinding>
				</Border.BorderBrush>
				
				<Image
					Cursor="Hand"
					Source="../Activity/Icons/home.png" 
					behaviors:MouseBehavior.LeftClickCommand="{wtc:CommandBinding {x:Static b1:Commands.SelectActivity}, Path=HomeActivity}"/>
			</Border>

			<ItemsControl
				x:Name="Activites"
				ItemsSource="{Binding OpenPlusCurrentActivities}">

				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel
							Orientation="Horizontal"
							x:Name="OpenActivitieStackPanel"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Button
							x:Name="Container"
							BorderThickness="2"
							Margin="0, 0, 3, 0"
							Padding="3"
							Command="{wtc:CommandBinding {x:Static b1:Commands.SelectActivity}}">

							<Button.Background>
								<SolidColorBrush Color= "Transparent" />
							</Button.Background>

							<Button.BorderBrush>
								<MultiBinding Converter="{StaticResource ActivityBorderConverter}">
									<Binding Path="IsActive" />
									<Binding Path="IsOpen" />
									<Binding Path="HasOpenWindows" />
									<Binding Path="HasUnattendedInterruptions" />
								</MultiBinding>
							</Button.BorderBrush>

							<Image
								Cursor="Hand"
								Source="{Binding Path=Icon}" />
						</Button>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

		</StackPanel>

	</DockPanel>
</Window>